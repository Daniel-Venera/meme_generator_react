{"version":3,"sources":["components/Header.js","components/Footer.js","components/MemeGenerator.js","components/App.js","index.js"],"names":["Header","Footer","class","href","target","MemeGenerator","state","topText","bottomText","randomImg","allMemeImgs","handleChange","bind","handleSubmit","fetch","then","response","json","memes","data","setState","event","name","value","this","preventDefault","randNum","Math","floor","random","length","randMemeImg","url","className","onSubmit","console","log","type","placeholder","onChange","src","alt","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"2MAUeA,MARf,WACE,OACE,4DCUWC,MAZf,WACE,OACE,gDACe,uBAAGC,MAAM,gBADxB,OAC8C,uBAAGC,KAAK,8CAAR,iBAC5C,6BACA,uBAAGA,KAAK,iDAAiDC,OAAO,SAAQ,uBAAGF,MAAM,kBACjF,uBAAGC,KAAK,kCAAkCC,OAAO,SAAQ,uBAAGF,MAAM,sBAClE,uBAAGC,KAAK,6CAA6CC,OAAO,SAAQ,uBAAGF,MAAM,sB,cCoDpEG,E,kDA1Db,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,QAAS,GACTC,WAAY,GACZC,UAAW,GACXC,YAAa,IAEf,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATR,E,gEAYO,IAAD,OAClBE,MAAM,qCACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAa,IACTE,EAAUF,EAASG,KAAnBD,MACR,EAAKE,SAAS,CACZV,YAAaQ,S,mCAMRG,GAAQ,IAAD,EACMA,EAAMjB,OAAtBkB,EADU,EACVA,KAAMC,EADI,EACJA,MACdC,KAAKJ,SAAL,eACGE,EAAOC,M,mCAICF,GACXA,EAAMI,iBACN,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWL,KAAKlB,MAAMI,YAAYoB,QAC5DC,EAAcP,KAAKlB,MAAMI,YAAYgB,GAASM,IACpDR,KAAKJ,SAAS,CAAEX,UAAWsB,M,+BAI3B,OACE,6BACE,0BAAME,UAAU,YAAYC,SAAUV,KAAKX,cACxCW,KAAKlB,MAAMG,UAAY0B,QAAQC,IAAI,OAASD,QAAQC,IAAI,OACzD,2BAAOH,UAAWT,KAAKlB,MAAMG,UAAY,KAAO,eAAgB4B,KAAK,OAAOf,KAAK,UAAUgB,YAAY,WAAWf,MAAOC,KAAKlB,MAAMC,QAASgC,SAAUf,KAAKb,eAC5J,2BAAOsB,UAAWT,KAAKlB,MAAMG,UAAY,KAAO,eAAgB4B,KAAK,OAAOf,KAAK,aAAagB,YAAY,cAAcf,MAAOC,KAAKlB,MAAME,WAAY+B,SAAUf,KAAKb,eACrK,4BAAQsB,UAAWT,KAAKlB,MAAMG,UAAY,KAAO,OAAjD,QAEF,yBAAKwB,UAAU,QACb,yBAAKO,IAAKhB,KAAKlB,MAAMG,UAAWgC,IAAI,KACpC,wBAAIR,UAAU,OAAOT,KAAKlB,MAAMC,SAChC,wBAAI0B,UAAU,UAAUT,KAAKlB,MAAME,kB,GAnDjBkC,IAAMC,WCqBnBC,E,kDAhBb,aAAe,IAAD,8BACZ,gBACKtC,MAAQ,GAFD,E,qDAMZ,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAXUoC,IAAMC,WCAxBE,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.1e793383.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Header() {\n  return (\n    <header>\n      Meme Generator in React\n    </header>\n  )\n}\n\nexport default Header","import React from 'react'\n\nfunction Footer() {\n  return (\n    <footer>\n      Created with <i class=\"fa fa-heart\"></i> by <a href=\"https://www.linkedin.com/in/daniel-venera/\">Daniel Venera</a>\n      <br></br>\n      <a href='https://github.com/Daniel-Venera/todoapp_react' target='blank'><i class=\"fa fa-github\"></i></a>\n      <a href=\"mailto:daniel.venera2@gmail.com\" target=\"blank\"><i class=\"fa fa-envelope-o\"></i></a>\n      <a href=\"https://www.linkedin.com/in/daniel-venera/\" target=\"blank\"><i class=\"fa fa-linkedin\"></i></a>\n    </footer>\n  )\n}\n\nexport default Footer","import React from 'react'\n\nclass MemeGenerator extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      topText: '',\n      bottomText: '',\n      randomImg: '',\n      allMemeImgs: []\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  componentDidMount() {\n    fetch('https://api.imgflip.com/get_memes')\n      .then(response => response.json())\n      .then(response => {\n        const { memes } = response.data\n        this.setState({\n          allMemeImgs: memes\n        }\n        )\n      })\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\n    const randMemeImg = this.state.allMemeImgs[randNum].url\n    this.setState({ randomImg: randMemeImg })\n  }\n\n  render() {\n    return (\n      <div>\n        <form className='meme-form' onSubmit={this.handleSubmit}>\n          {this.state.randomImg ? console.log('oui') : console.log('non')}\n          <input className={this.state.randomImg ? null : 'hidden-input'} type='text' name='topText' placeholder='Top Text' value={this.state.topText} onChange={this.handleChange}></input>\n          <input className={this.state.randomImg ? null : 'hidden-input'} type='text' name='bottomText' placeholder='Bottom Text' value={this.state.bottomText} onChange={this.handleChange}></input>\n          <button className={this.state.randomImg ? null : 'gen'}>Gen</button>\n        </form>\n        <div className='meme'>\n          <img src={this.state.randomImg} alt='' />\n          <h2 className='top'>{this.state.topText}</h2>\n          <h2 className='bottom'>{this.state.bottomText}</h2>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default MemeGenerator","import React from 'react'\nimport Header from './Header'\nimport Footer from './Footer'\nimport MemeGenerator from './MemeGenerator'\n\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {}\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <MemeGenerator />\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './style.css'\n\nimport App from './components/App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}